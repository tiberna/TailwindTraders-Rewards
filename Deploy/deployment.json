{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sqlServerAdministratorUser": {
      "type": "string",
      "defaultvalue": "sqladmin"
    },
    "sqlServerAdministratorPassword": {
      "type": "securestring"
    },
    "vmUser": {
      "type": "string",
      "defaultvalue": "premierdays"
    },
    "vmPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "sqlserver_name": "ttsqlserver",
    "vm_name": "ttvmweb", 
    "storage_name": "[concat(variables('vm_name'), 'storage')]",
    "publicip_name": "[concat(variables('vm_name'), '-publicip')]",
    "nsg_name": "[concat(variables('vm_name'), '-nsg')]",
    "vnet_name": "[concat(variables('vm_name'), '-vnet')]",
    "nic_name": "[concat(variables('vm_name'), '-nic')]"
  },
  "resources": [
    {
      "name": "[variables('storage_name')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('publicip_name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(variables('vm_name'))]"
        }
      }
    },
    {
      "name": "[variables('nsg_name')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "nsgRule1",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "nsgRule2",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vnet_name')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[concat(variables('vnet_name'),'-subnet')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('nic_name')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
      ],
      "tags": {
        "displayName": "windowsVM1 Network Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), concat(variables('vnet_name'),'-subnet'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vm_name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', toLower(variables('storage_name')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_name'))]"
      ],
      "tags": {
        "displayName": "[variables('vm_name')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2ms"
        },
        "osProfile": {
          "computerName": "[variables('vm_name')]",
          "adminUsername": "[parameters('vmUser')]",
          "adminPassword": "[parameters('vmPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "windowsVM1OSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(variables('storage_name')))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2019-07-01",
      "name": "[concat(variables('vm_name'),'/', 'InstallWebServer')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/',variables('vm_name'))]"
      ],
      "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.7",
          "autoUpgradeMinorVersion":true,
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/tutorial-vm-extension/installWebServer.ps1"
            ],
            "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File installWebServer.ps1"
          }
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "name": "[variables('sqlserver_name')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdministratorUser')]",
        "administratorLoginPassword": "[parameters('sqlServerAdministratorPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "type": "databases",
          "sku": {
            "name": "S0",
            "tier": "Standard"
          },
          "name": "rewardsdb",
          "apiVersion": "2017-10-01-preview",
          "location": "[resourceGroup().location]",
          "properties": {
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": 268435456000,
            "sampleName": "",
            "zoneRedundant": false,
            "licenseType": ""
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlserver_name'))]"
          ]
        },
        {
          "type": "firewallrules",
          "name": "AllowAllWindowsAzureIps",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "properties": {
            "endIpAddress": "255.255.255.255",
            "startIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlserver_name'))]"
          ],
          "condition": true
        },
        {
          "type": "securityAlertPolicies",
          "name": "Default",
          "apiVersion": "2017-03-01-preview",
          "properties": {
            "state": "Enabled",
            "disabledAlerts": [],
            "emailAddresses": [],
            "emailAccountAdmins": true
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlserver_name'))]",
            "[concat('Microsoft.Sql/servers/', variables('sqlserver_name'), '/databases/', 'rewardsdb')]"
          ],
          "condition": false
        }
      ]
    }
  ],
  "outputs": {
    "sqlserver": {
      "type": "string",
      "value": "[variables('sqlserver_name')]"
    }
  }
}
